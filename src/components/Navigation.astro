---
import Modal from './Modal.astro'

export interface Props {
  title?: string
}

const { title } = Astro.props
---

<nav class="bg-white border-gray-200 px-1 sm:px-4 py-0.5 rounded shadow-lg">
  <div class="container flex flex-wrap items-center justify-between mx-auto">
    <a href="" class="flex items-center">
      <img src="/Logo.svg" class="h-6 mr-3 sm:h-9" alt={title} />
      <span class="self-center text-xl font-semibold whitespace-nowrap"
        >{title}</span
      >
    </a>

    <div class="hidden w-full md:block md:w-auto" id="navbar-default">
      <ul
        class="flex flex-col p-4 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white"
      >
        <li>
          <button
            type="button"
            class="text-white bg-gradient-to-r from-green-700 via-green-800 to-green-900 hover:bg-gradient-to-br focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-5 py-2 text-center mr-2"
            id="settingsbutton">settings</button
          >
        </li>
      </ul>
    </div>
  </div>
</nav>
<div class="relative z-50" id="defaultModal" hidden>
  <Modal />
</div>

<script>
  document.getElementById('settingsbutton').addEventListener('click', () => {
    toggle()
  })
  document.getElementById('closebutton').addEventListener('click', () => {
    toggle()
  })

  let toggle = () => {
    let element = document.getElementById('defaultModal')
    let hidden = element.getAttribute('hidden')

    if (hidden) {
      element.removeAttribute('hidden')
    } else {
      element.setAttribute('hidden', 'hidden')
    }
  }
</script>
